"use strict";
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
var __read = (this && this.__read) || function (o, n) {
    var m = typeof Symbol === "function" && o[Symbol.iterator];
    if (!m) return o;
    var i = m.call(o), r, ar = [], e;
    try {
        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);
    }
    catch (error) { e = { error: error }; }
    finally {
        try {
            if (r && !r.done && (m = i["return"])) m.call(i);
        }
        finally { if (e) throw e.error; }
    }
    return ar;
};
var __values = (this && this.__values) || function(o) {
    var s = typeof Symbol === "function" && Symbol.iterator, m = s && o[s], i = 0;
    if (m) return m.call(o);
    if (o && typeof o.length === "number") return {
        next: function () {
            if (o && i >= o.length) o = void 0;
            return { value: o && o[i++], done: !o };
        }
    };
    throw new TypeError(s ? "Object is not iterable." : "Symbol.iterator is not defined.");
};
var e_1, _a;
Object.defineProperty(exports, "__esModule", { value: true });
require("minimal-polyfills/Object.fromEntries");
var fs = __importStar(require("fs"));
var path_1 = require("path");
var crawl_1 = require("./tools/crawl");
var download_builtin_keycloak_theme_1 = require("./download-builtin-keycloak-theme");
var getProjectRoot_1 = require("./tools/getProjectRoot");
var rm_1 = require("./tools/rm");
var KeycloakVersion_1 = require("./KeycloakVersion");
//@ts-ignore
var propertiesParser = require("properties-parser");
var _loop_1 = function (keycloakVersion) {
    console.log({ keycloakVersion: keycloakVersion });
    var tmpDirPath = (0, path_1.join)((0, getProjectRoot_1.getProjectRoot)(), "tmp_xImOef9dOd44");
    (0, rm_1.rm_rf)(tmpDirPath);
    (0, download_builtin_keycloak_theme_1.downloadBuiltinKeycloakTheme)({
        keycloakVersion: keycloakVersion,
        "destDirPath": tmpDirPath,
    });
    var record = {};
    {
        var baseThemeDirPath_1 = (0, path_1.join)(tmpDirPath, "base");
        (0, crawl_1.crawl)(baseThemeDirPath_1).forEach(function (filePath) {
            var _a;
            var match = filePath.match(/^([^/]+)\/messages\/messages_([^.]+)\.properties$/);
            if (match === null) {
                return;
            }
            var _b = __read(match, 3), typeOfPage = _b[1], language = _b[2];
            ((_a = record[typeOfPage]) !== null && _a !== void 0 ? _a : (record[typeOfPage] = {}))[language.replace(/_/g, "-")] = Object.fromEntries(Object.entries(propertiesParser.parse(fs.readFileSync((0, path_1.join)(baseThemeDirPath_1, filePath)).toString("utf8"))).map(function (_a) {
                var _b = __read(_a, 2), key = _b[0], value = _b[1];
                return [key, value.replace(/''/g, "'")];
            }));
        });
    }
    (0, rm_1.rm_r)(tmpDirPath);
    var targetDirPath = (0, path_1.join)((0, getProjectRoot_1.getProjectRoot)(), "src", "lib", "i18n", "generated_kcMessages", keycloakVersion);
    fs.mkdirSync(targetDirPath, { "recursive": true });
    Object.keys(record).forEach(function (pageType) {
        var filePath = (0, path_1.join)(targetDirPath, pageType + ".ts");
        fs.writeFileSync(filePath, Buffer.from([
            "//This code was automatically generated by running " + (0, path_1.relative)((0, getProjectRoot_1.getProjectRoot)(), __filename),
            "//PLEASE DO NOT EDIT MANUALLY",
            "",
            "/* spell-checker: disable */",
            "export const kcMessages= " + JSON.stringify(record[pageType], null, 2) + ";",
            "/* spell-checker: enable */",
        ].join("\n"), "utf8"));
        console.log(filePath + " wrote");
    });
};
try {
    for (var keycloakVersions_1 = __values(KeycloakVersion_1.keycloakVersions), keycloakVersions_1_1 = keycloakVersions_1.next(); !keycloakVersions_1_1.done; keycloakVersions_1_1 = keycloakVersions_1.next()) {
        var keycloakVersion = keycloakVersions_1_1.value;
        _loop_1(keycloakVersion);
    }
}
catch (e_1_1) { e_1 = { error: e_1_1 }; }
finally {
    try {
        if (keycloakVersions_1_1 && !keycloakVersions_1_1.done && (_a = keycloakVersions_1.return)) _a.call(keycloakVersions_1);
    }
    finally { if (e_1) throw e_1.error; }
}
//# sourceMappingURL=generate-i18n-messages.js.map