export declare const kcMessages: {
    ca: {
        invalidPasswordHistoryMessage: string;
        invalidPasswordMinDigitsMessage: string;
        invalidPasswordMinLengthMessage: string;
        invalidPasswordMinLowerCaseCharsMessage: string;
        invalidPasswordMinSpecialCharsMessage: string;
        invalidPasswordMinUpperCaseCharsMessage: string;
        invalidPasswordNotUsernameMessage: string;
        invalidPasswordRegexPatternMessage: string;
    };
    de: {
        invalidPasswordMinLengthMessage: string;
        invalidPasswordMinLowerCaseCharsMessage: string;
        invalidPasswordMinDigitsMessage: string;
        invalidPasswordMinUpperCaseCharsMessage: string;
        invalidPasswordMinSpecialCharsMessage: string;
        invalidPasswordNotUsernameMessage: string;
        invalidPasswordRegexPatternMessage: string;
        invalidPasswordHistoryMessage: string;
        invalidPasswordBlacklistedMessage: string;
        invalidPasswordGenericMessage: string;
    };
    en: {
        invalidPasswordMinLengthMessage: string;
        invalidPasswordMinLowerCaseCharsMessage: string;
        invalidPasswordMinDigitsMessage: string;
        invalidPasswordMinUpperCaseCharsMessage: string;
        invalidPasswordMinSpecialCharsMessage: string;
        invalidPasswordNotUsernameMessage: string;
        invalidPasswordRegexPatternMessage: string;
        invalidPasswordHistoryMessage: string;
        invalidPasswordBlacklistedMessage: string;
        invalidPasswordGenericMessage: string;
        ldapErrorInvalidCustomFilter: string;
        ldapErrorConnectionTimeoutNotNumber: string;
        ldapErrorReadTimeoutNotNumber: string;
        ldapErrorMissingClientId: string;
        ldapErrorCantPreserveGroupInheritanceWithUIDMembershipType: string;
        ldapErrorCantWriteOnlyForReadOnlyLdap: string;
        ldapErrorCantWriteOnlyAndReadOnly: string;
        ldapErrorCantEnableStartTlsAndConnectionPooling: string;
        ldapErrorCantEnableUnsyncedAndImportOff: string;
        ldapErrorMissingGroupsPathGroup: string;
        clientRedirectURIsFragmentError: string;
        clientRootURLFragmentError: string;
        clientRootURLIllegalSchemeError: string;
        clientBaseURLIllegalSchemeError: string;
        clientRedirectURIsIllegalSchemeError: string;
        clientBaseURLInvalid: string;
        clientRootURLInvalid: string;
        clientRedirectURIsInvalid: string;
        pairwiseMalformedClientRedirectURI: string;
        pairwiseClientRedirectURIsMissingHost: string;
        pairwiseClientRedirectURIsMultipleHosts: string;
        pairwiseMalformedSectorIdentifierURI: string;
        pairwiseFailedToGetRedirectURIs: string;
        pairwiseRedirectURIsMismatch: string;
    };
    es: {
        invalidPasswordMinLengthMessage: string;
        invalidPasswordMinLowerCaseCharsMessage: string;
        invalidPasswordMinDigitsMessage: string;
        invalidPasswordMinUpperCaseCharsMessage: string;
        invalidPasswordMinSpecialCharsMessage: string;
        invalidPasswordNotUsernameMessage: string;
        invalidPasswordRegexPatternMessage: string;
        invalidPasswordHistoryMessage: string;
    };
    fr: {
        invalidPasswordMinLengthMessage: string;
        invalidPasswordMinLowerCaseCharsMessage: string;
        invalidPasswordMinDigitsMessage: string;
        invalidPasswordMinUpperCaseCharsMessage: string;
        invalidPasswordMinSpecialCharsMessage: string;
        invalidPasswordNotUsernameMessage: string;
        invalidPasswordRegexPatternMessage: string;
        invalidPasswordHistoryMessage: string;
    };
    it: {};
    ja: {
        invalidPasswordMinLengthMessage: string;
        invalidPasswordMinLowerCaseCharsMessage: string;
        invalidPasswordMinDigitsMessage: string;
        invalidPasswordMinUpperCaseCharsMessage: string;
        invalidPasswordMinSpecialCharsMessage: string;
        invalidPasswordNotUsernameMessage: string;
        invalidPasswordRegexPatternMessage: string;
        invalidPasswordHistoryMessage: string;
        invalidPasswordBlacklistedMessage: string;
        invalidPasswordGenericMessage: string;
        ldapErrorInvalidCustomFilter: string;
        ldapErrorConnectionTimeoutNotNumber: string;
        ldapErrorReadTimeoutNotNumber: string;
        ldapErrorMissingClientId: string;
        ldapErrorCantPreserveGroupInheritanceWithUIDMembershipType: string;
        ldapErrorCantWriteOnlyForReadOnlyLdap: string;
        ldapErrorCantWriteOnlyAndReadOnly: string;
        ldapErrorCantEnableStartTlsAndConnectionPooling: string;
        clientRedirectURIsFragmentError: string;
        clientRootURLFragmentError: string;
        pairwiseMalformedClientRedirectURI: string;
        pairwiseClientRedirectURIsMissingHost: string;
        pairwiseClientRedirectURIsMultipleHosts: string;
        pairwiseMalformedSectorIdentifierURI: string;
        pairwiseFailedToGetRedirectURIs: string;
        pairwiseRedirectURIsMismatch: string;
    };
    lt: {
        invalidPasswordMinLengthMessage: string;
        invalidPasswordMinLowerCaseCharsMessage: string;
        invalidPasswordMinDigitsMessage: string;
        invalidPasswordMinUpperCaseCharsMessage: string;
        invalidPasswordMinSpecialCharsMessage: string;
        invalidPasswordNotUsernameMessage: string;
        invalidPasswordRegexPatternMessage: string;
        invalidPasswordHistoryMessage: string;
        ldapErrorInvalidCustomFilter: string;
        ldapErrorMissingClientId: string;
        ldapErrorCantPreserveGroupInheritanceWithUIDMembershipType: string;
        ldapErrorCantWriteOnlyForReadOnlyLdap: string;
        ldapErrorCantWriteOnlyAndReadOnly: string;
        clientRedirectURIsFragmentError: string;
        clientRootURLFragmentError: string;
        pairwiseMalformedClientRedirectURI: string;
        pairwiseClientRedirectURIsMissingHost: string;
        pairwiseClientRedirectURIsMultipleHosts: string;
        pairwiseMalformedSectorIdentifierURI: string;
        pairwiseFailedToGetRedirectURIs: string;
        pairwiseRedirectURIsMismatch: string;
    };
    nl: {
        invalidPasswordMinLengthMessage: string;
        invalidPasswordMinLowerCaseCharsMessage: string;
        invalidPasswordMinDigitsMessage: string;
        invalidPasswordMinUpperCaseCharsMessage: string;
        invalidPasswordMinSpecialCharsMessage: string;
        invalidPasswordNotUsernameMessage: string;
        invalidPasswordRegexPatternMessage: string;
        invalidPasswordHistoryMessage: string;
        invalidPasswordGenericMessage: string;
        ldapErrorInvalidCustomFilter: string;
        ldapErrorConnectionTimeoutNotNumber: string;
        ldapErrorReadTimeoutNotNumber: string;
        ldapErrorMissingClientId: string;
        ldapErrorCantPreserveGroupInheritanceWithUIDMembershipType: string;
        ldapErrorCantWriteOnlyForReadOnlyLdap: string;
        ldapErrorCantWriteOnlyAndReadOnly: string;
        clientRedirectURIsFragmentError: string;
        clientRootURLFragmentError: string;
        pairwiseMalformedClientRedirectURI: string;
        pairwiseClientRedirectURIsMissingHost: string;
        pairwiseClientRedirectURIsMultipleHosts: string;
        pairwiseMalformedSectorIdentifierURI: string;
        pairwiseFailedToGetRedirectURIs: string;
        pairwiseRedirectURIsMismatch: string;
    };
    no: {
        invalidPasswordMinLengthMessage: string;
        invalidPasswordMinLowerCaseCharsMessage: string;
        invalidPasswordMinDigitsMessage: string;
        invalidPasswordMinUpperCaseCharsMessage: string;
        invalidPasswordMinSpecialCharsMessage: string;
        invalidPasswordNotUsernameMessage: string;
        invalidPasswordRegexPatternMessage: string;
        invalidPasswordHistoryMessage: string;
        ldapErrorInvalidCustomFilter: string;
        ldapErrorMissingClientId: string;
        ldapErrorCantPreserveGroupInheritanceWithUIDMembershipType: string;
        ldapErrorCantWriteOnlyForReadOnlyLdap: string;
        ldapErrorCantWriteOnlyAndReadOnly: string;
    };
    pl: {};
    "pt-BR": {
        invalidPasswordMinLengthMessage: string;
        invalidPasswordMinLowerCaseCharsMessage: string;
        invalidPasswordMinDigitsMessage: string;
        invalidPasswordMinUpperCaseCharsMessage: string;
        invalidPasswordMinSpecialCharsMessage: string;
        invalidPasswordNotUsernameMessage: string;
        invalidPasswordRegexPatternMessage: string;
        invalidPasswordHistoryMessage: string;
        ldapErrorInvalidCustomFilter: string;
        ldapErrorMissingClientId: string;
        ldapErrorCantPreserveGroupInheritanceWithUIDMembershipType: string;
        ldapErrorCantWriteOnlyForReadOnlyLdap: string;
        ldapErrorCantWriteOnlyAndReadOnly: string;
        clientRedirectURIsFragmentError: string;
        clientRootURLFragmentError: string;
    };
    ru: {
        invalidPasswordMinLengthMessage: string;
        invalidPasswordMinDigitsMessage: string;
        invalidPasswordMinLowerCaseCharsMessage: string;
        invalidPasswordMinUpperCaseCharsMessage: string;
        invalidPasswordMinSpecialCharsMessage: string;
        invalidPasswordNotUsernameMessage: string;
        invalidPasswordRegexPatternMessage: string;
        invalidPasswordHistoryMessage: string;
        invalidPasswordGenericMessage: string;
        ldapErrorInvalidCustomFilter: string;
        ldapErrorMissingClientId: string;
        ldapErrorCantPreserveGroupInheritanceWithUIDMembershipType: string;
        ldapErrorCantWriteOnlyForReadOnlyLdap: string;
        ldapErrorCantWriteOnlyAndReadOnly: string;
        clientRedirectURIsFragmentError: string;
        clientRootURLFragmentError: string;
        pairwiseMalformedClientRedirectURI: string;
        pairwiseClientRedirectURIsMissingHost: string;
        pairwiseClientRedirectURIsMultipleHosts: string;
        pairwiseMalformedSectorIdentifierURI: string;
        pairwiseFailedToGetRedirectURIs: string;
        pairwiseRedirectURIsMismatch: string;
    };
    "zh-CN": {
        invalidPasswordMinLengthMessage: string;
        invalidPasswordMinLowerCaseCharsMessage: string;
        invalidPasswordMinDigitsMessage: string;
        invalidPasswordMinUpperCaseCharsMessage: string;
        invalidPasswordMinSpecialCharsMessage: string;
        invalidPasswordNotUsernameMessage: string;
        invalidPasswordRegexPatternMessage: string;
        invalidPasswordHistoryMessage: string;
        ldapErrorInvalidCustomFilter: string;
        ldapErrorConnectionTimeoutNotNumber: string;
        ldapErrorMissingClientId: string;
        ldapErrorCantPreserveGroupInheritanceWithUIDMembershipType: string;
        ldapErrorCantWriteOnlyForReadOnlyLdap: string;
        ldapErrorCantWriteOnlyAndReadOnly: string;
        clientRedirectURIsFragmentError: string;
        clientRootURLFragmentError: string;
        pairwiseMalformedClientRedirectURI: string;
        pairwiseClientRedirectURIsMissingHost: string;
        pairwiseClientRedirectURIsMultipleHosts: string;
        pairwiseMalformedSectorIdentifierURI: string;
        pairwiseFailedToGetRedirectURIs: string;
        pairwiseRedirectURIsMismatch: string;
    };
};
